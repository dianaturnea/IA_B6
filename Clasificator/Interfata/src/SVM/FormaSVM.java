package SVM;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author io
 */
public class FormaSVM extends javax.swing.JFrame {

    File chosenSVMDirectory;
    File chosenTrainingFile;
    File chosenTestFile;
    File chosenModelFile;
    File outputFile;
    boolean locked = false; //pentru a bloca forma cat timp se executa trainingul

    /**
     * Creates new form FormaSVM
     */
    public FormaSVM() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textFieldTrainingFile = new javax.swing.JTextField();
        labelTrainingFile = new javax.swing.JLabel();
        labelModelFile = new javax.swing.JLabel();
        labelTestFile = new javax.swing.JLabel();
        textFieldModelFile = new javax.swing.JTextField();
        textFieldTestFile = new javax.swing.JTextField();
        labelOutput = new javax.swing.JLabel();
        buttonBrowseTraining = new javax.swing.JButton();
        buttonBrowseModel = new javax.swing.JButton();
        buttonBrowseTest = new javax.swing.JButton();
        buttonExitSVM = new javax.swing.JButton();
        buttonSeeOutputFile = new javax.swing.JButton();
        textFieldOutput = new javax.swing.JTextField();
        buttonTrain = new javax.swing.JButton();
        buttonModel = new javax.swing.JButton();
        buttonTest = new javax.swing.JButton();
        labelTitleSVM = new javax.swing.JLabel();
        labelSVMDirectory = new javax.swing.JLabel();
        buttonBrowseForLibraries = new javax.swing.JButton();
        labelLibrarySelected = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        textFieldTrainingFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldTrainingFileActionPerformed(evt);
            }
        });

        labelTrainingFile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelTrainingFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTrainingFile.setText("Training File");

        labelModelFile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelModelFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelModelFile.setText("Model File");

        labelTestFile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelTestFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTestFile.setText("Test File");

        textFieldModelFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldModelFileActionPerformed(evt);
            }
        });

        textFieldTestFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldTestFileActionPerformed(evt);
            }
        });

        labelOutput.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelOutput.setText("Output");

        buttonBrowseTraining.setBackground(new java.awt.Color(204, 204, 204));
        buttonBrowseTraining.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        buttonBrowseTraining.setText("Browse");
        buttonBrowseTraining.setBorderPainted(false);
        buttonBrowseTraining.setFocusable(false);
        buttonBrowseTraining.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        buttonBrowseTraining.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseTrainingActionPerformed(evt);
            }
        });

        buttonBrowseModel.setBackground(new java.awt.Color(204, 204, 204));
        buttonBrowseModel.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        buttonBrowseModel.setText("Browse");
        buttonBrowseModel.setBorderPainted(false);
        buttonBrowseModel.setFocusable(false);
        buttonBrowseModel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        buttonBrowseModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseModelActionPerformed(evt);
            }
        });

        buttonBrowseTest.setBackground(new java.awt.Color(204, 204, 204));
        buttonBrowseTest.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        buttonBrowseTest.setText("Browse");
        buttonBrowseTest.setBorderPainted(false);
        buttonBrowseTest.setFocusable(false);
        buttonBrowseTest.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        buttonBrowseTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseTestActionPerformed(evt);
            }
        });

        buttonExitSVM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonExitSVM.setText("EXIT");
        buttonExitSVM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitSVMActionPerformed(evt);
            }
        });

        buttonSeeOutputFile.setBackground(new java.awt.Color(255, 153, 153));
        buttonSeeOutputFile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonSeeOutputFile.setText("See Output");
        buttonSeeOutputFile.setFocusable(false);
        buttonSeeOutputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSeeOutputFileActionPerformed(evt);
            }
        });

        textFieldOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldOutputActionPerformed(evt);
            }
        });

        buttonTrain.setBackground(new java.awt.Color(255, 153, 153));
        buttonTrain.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonTrain.setText("Train it!");
        buttonTrain.setFocusable(false);
        buttonTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTrainActionPerformed(evt);
            }
        });

        buttonModel.setBackground(new java.awt.Color(255, 153, 153));
        buttonModel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonModel.setText("Use this model!");
        buttonModel.setFocusable(false);
        buttonModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModelActionPerformed(evt);
            }
        });

        buttonTest.setBackground(new java.awt.Color(255, 153, 153));
        buttonTest.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonTest.setText("Use this test file!");
        buttonTest.setFocusable(false);

        labelTitleSVM.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelTitleSVM.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitleSVM.setText("Custom SVM Tool");

        labelSVMDirectory.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSVMDirectory.setText("Choose directory for SVM libraries!");

        buttonBrowseForLibraries.setBackground(new java.awt.Color(255, 153, 153));
        buttonBrowseForLibraries.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        buttonBrowseForLibraries.setText("Browse");
        buttonBrowseForLibraries.setBorderPainted(false);
        buttonBrowseForLibraries.setFocusable(false);
        buttonBrowseForLibraries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseForLibrariesActionPerformed(evt);
            }
        });

        labelLibrarySelected.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelLibrarySelected.setForeground(new java.awt.Color(204, 0, 51));
        labelLibrarySelected.setText("Not chosen!!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonExitSVM, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(244, 244, 244))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelSVMDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBrowseForLibraries, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelLibrarySelected, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(buttonModel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(labelTrainingFile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textFieldTrainingFile, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textFieldOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buttonBrowseTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                        .addComponent(buttonTrain, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(buttonSeeOutputFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(labelTestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldTestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonBrowseTest, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonTest, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(42, 42, 42))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(labelTitleSVM, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelModelFile, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldModelFile, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonBrowseModel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonBrowseModel, buttonBrowseTest, buttonBrowseTraining});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonModel, buttonTest, buttonTrain});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitleSVM, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSVMDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBrowseForLibraries, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(labelLibrarySelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(labelTrainingFile, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(textFieldTrainingFile, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonBrowseTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonTrain))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(labelTestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(textFieldTestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonBrowseTest, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonTest))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelModelFile)
                                .addComponent(buttonBrowseModel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonModel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(labelOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldModelFile, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonSeeOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(buttonExitSVM, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {buttonBrowseTraining, buttonTrain, labelTrainingFile, textFieldTrainingFile});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {buttonBrowseTest, buttonTest, labelTestFile, textFieldTestFile});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {buttonSeeOutputFile, labelOutput, textFieldOutput});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldTrainingFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldTrainingFileActionPerformed
        //daca cineva incearca sa editeze manual adresa pt fisiere dar nu a selectat librariile
        if (!this.textFieldTrainingFile.getText().equals("") && !this.librariesSelected()) {
            this.textFieldTrainingFile.setText("");
        }
    }//GEN-LAST:event_textFieldTrainingFileActionPerformed

    private void buttonExitSVMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitSVMActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonExitSVMActionPerformed


    private void buttonBrowseTrainingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseTrainingActionPerformed
        if (librariesSelected()) {
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("\\"));
            int choice = chooser.showOpenDialog(this);
            if (choice != JFileChooser.APPROVE_OPTION) {
                return;
            }
            this.chosenTrainingFile = chooser.getSelectedFile();
            this.textFieldTrainingFile.setText(chosenTrainingFile.getAbsolutePath());
        }
    }//GEN-LAST:event_buttonBrowseTrainingActionPerformed

    private void buttonSeeOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSeeOutputFileActionPerformed
        try (BufferedReader br = new BufferedReader(new FileReader(this.textFieldOutput.getText()))) {
            StringBuilder sb = new StringBuilder();
            String line = br.readLine();

            while (line != null) {
                sb.append(line);
                sb.append(System.lineSeparator());
                line = br.readLine();
            }
            String everything = sb.toString();
            JOptionPane.showMessageDialog(null,everything);
        } catch (IOException ex) {
            Logger.getLogger(FormaSVM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSeeOutputFileActionPerformed

    private void textFieldTestFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldTestFileActionPerformed
        //daca cineva incearca sa editeze manual adresa pt fisiere dar nu a selectat librariile
        if (!this.textFieldTestFile.getText().equals("") && !this.librariesSelected()) {
            this.textFieldTestFile.setText("");
        }
    }//GEN-LAST:event_textFieldTestFileActionPerformed

    private void buttonBrowseTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseTestActionPerformed
        if (librariesSelected()) {
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("\\"));
            int choice = chooser.showOpenDialog(this);
            if (choice != JFileChooser.APPROVE_OPTION) {
                return;
            }
            chosenTestFile = chooser.getSelectedFile();
            this.textFieldTestFile.setText(chosenTestFile.getAbsolutePath());
        }
    }//GEN-LAST:event_buttonBrowseTestActionPerformed

    private void buttonBrowseModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseModelActionPerformed
        if (librariesSelected()) {
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("\\"));
            int choice = chooser.showOpenDialog(this);
            if (choice != JFileChooser.APPROVE_OPTION) {
                return;
            }
            chosenModelFile = chooser.getSelectedFile();
            this.textFieldModelFile.setText(chosenModelFile.getAbsolutePath());
        }
    }//GEN-LAST:event_buttonBrowseModelActionPerformed

    private void buttonTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTrainActionPerformed
        try {
            String path = chosenSVMDirectory.getAbsolutePath();
            Process process = Runtime.getRuntime().exec("cmd /c start cmd.exe /K \"cd " + path + "/windows "
                    + "&& svm-train.exe -h 0 " + this.textFieldTrainingFile.getText() + "\"");
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line = null;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
            int r = process.waitFor(); // Lasam procesul sa se termine
            if (r == 0) { // totul e ok, procesul s-a terminat cu succes
                //setam automat fisierul creat cu succes ca model
                this.textFieldModelFile.setText(path + "/windows/" + this.chosenTrainingFile.getName() + ".model");
            }
        } catch (IOException e) {
        } catch (InterruptedException ex) {
            Logger.getLogger(FormaSVM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonTrainActionPerformed

    private void buttonBrowseForLibrariesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseForLibrariesActionPerformed
        JOptionPane.showMessageDialog(null, "Make sure you choose the root directory to SVM libraries! The program doesn't check if it's correct (yet)");
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("\\"));
        chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            chosenSVMDirectory = chooser.getSelectedFile();
            this.labelLibrarySelected.setText("OK");
            this.labelLibrarySelected.setForeground(Color.GREEN);
        }
    }//GEN-LAST:event_buttonBrowseForLibrariesActionPerformed

    private void textFieldModelFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldModelFileActionPerformed
        //daca cineva incearca sa editeze manual adresa pt fisiere dar nu a selectat librariile
        if (!this.textFieldModelFile.getText().equals("") && !this.librariesSelected()) {
            this.textFieldModelFile.setText("");
        }
    }//GEN-LAST:event_textFieldModelFileActionPerformed

    private void textFieldOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldOutputActionPerformed
        //daca cineva incearca sa editeze manual adresa pt fisiere dar nu a selectat librariile
        if (!this.textFieldOutput.getText().equals("") && !this.librariesSelected()) {
            this.textFieldOutput.setText("");
        }
    }//GEN-LAST:event_textFieldOutputActionPerformed

    private void buttonModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModelActionPerformed
        try {
            String path = chosenSVMDirectory.getAbsolutePath();
            Process process = Runtime.getRuntime().exec("cmd /c start cmd.exe /K \"cd " + path + "/windows "
                    + "&& svm-predict.exe " + this.textFieldTestFile.getText() + " " + this.textFieldModelFile.getText() + " imagine.out\"");
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line = null;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
            int r = process.waitFor(); // Lasam procesul sa se termine
            if (r == 0) { // totul e ok, procesul s-a terminat cu succes
                //setam automat fisierul creat cu succes ca model
                this.textFieldOutput.setText(path + "/windows/imagine.out");
            }
        } catch (IOException e) {
        } catch (InterruptedException ex) {
            Logger.getLogger(FormaSVM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonModelActionPerformed

    private boolean librariesSelected() {
        boolean ret = false;
        if (this.labelLibrarySelected.getText().equals("OK")) {
            ret = true;
        } else {
            JOptionPane.showMessageDialog(null, "You have not chosen the path to the SVM libraries yet, please do so...");
        }
        return ret;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaSVM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaSVM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaSVM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaSVM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormaSVM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowseForLibraries;
    private javax.swing.JButton buttonBrowseModel;
    private javax.swing.JButton buttonBrowseTest;
    private javax.swing.JButton buttonBrowseTraining;
    private javax.swing.JButton buttonExitSVM;
    private javax.swing.JButton buttonModel;
    private javax.swing.JButton buttonSeeOutputFile;
    private javax.swing.JButton buttonTest;
    private javax.swing.JButton buttonTrain;
    private javax.swing.JLabel labelLibrarySelected;
    private javax.swing.JLabel labelModelFile;
    private javax.swing.JLabel labelOutput;
    private javax.swing.JLabel labelSVMDirectory;
    private javax.swing.JLabel labelTestFile;
    private javax.swing.JLabel labelTitleSVM;
    private javax.swing.JLabel labelTrainingFile;
    private javax.swing.JTextField textFieldModelFile;
    private javax.swing.JTextField textFieldOutput;
    private javax.swing.JTextField textFieldTestFile;
    private javax.swing.JTextField textFieldTrainingFile;
    // End of variables declaration//GEN-END:variables
}
